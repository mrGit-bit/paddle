# .env.example
# In the server environment, copy this file to `.env` and update the values accordingly.
# Used with python-decouple to manage environment variables from a `.env` file.
# Keep `.env` out of version control (add `.env` to .gitignore).
# No needed on Render or Railway

# Environment mode: production
DJANGO_ENVIRONMENT=prod
DEBUG=False

# Django secret key (required)
# cSpell:disable-next-line
SECRET_KEY=your-secret-key-here

# Comma-separated list of allowed hosts (no quotes)
ALLOWED_HOSTS=your-vm-ip

# Comma-separated list of trusted origins for CSRF protection
CSRF_TRUSTED_ORIGINS=http://your-vm-ip

# Base URL where the app is running
SITE_URL=http://your-vm-ip

# Base URL for the API endpoints
BASE_API_URL=http://your-vm-ip/api/

## ========================
## Oracle Autonomous Database Settings (VCN-only access)
## ========================

ORACLE_DB_USER=admin
ORACLE_DB_PASSWORD=your-password
ORACLE_DB_HOST=10.0.1.2         # Private IP or VCN DNS name
ORACLE_DB_PORT=1521
ORACLE_DB_SERVICE=padel_high    # Options: padel_low, padel_tp, padel_high

## ========================
## Optional: other deployments
## ========================

# MySQL settings for production on PythonAnywhere
# PythonAnywhere user name: yourusername
# MySQL database name: yourdbname
# MYSQL_DB_NAME=yourusername$yourdbname
# MYSQL_DB_USER=yourusername
# MYSQL_DB_PASSWORD=your-db-password
# MYSQL_DB_HOST=yourusername.mysql.pythonanywhere-services.com
# MYSQL_DB_PORT=3306

# Using Supabase PostgreSQL (in dj-database-url format)
# DATABASE_URL=postgresql://postgres:<your-password>@db.oaihanubohhzcf5bkkhq.supabase.co:5432/postgres

